/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schedule;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.Border;

/**
 *
 * @author ahmed
 */
//In this class, we are creating a border around the rectangle
class RoundBtn implements Border {

    private final int r;

    RoundBtn(int r) {
        this.r = r;
    }

    @Override
    public Insets getBorderInsets(Component c) {
        return new Insets(this.r + 1, this.r + 1, this.r + 2, this.r);
    }

    @Override
    public boolean isBorderOpaque() {
        return true;
    }

    @Override
    public void paintBorder(Component c, Graphics g, int x, int y,
            int width, int height) {
        g.drawRoundRect(x, y, width - 1, height - 1, r, r);
    }
}

public class Login extends javax.swing.JFrame {

    String value;

    public static int index;

    protected static String nameUser;
    protected static String passUser;

    public Login() {
        super("Login"); // Setting title of this frame.

        initComponents();

        setLocationRelativeTo(null); //Setting frame at the middle of the screen.

        //Drawing a rectangle border around the buttons that has radius 4.
        btn_login.setBorder(new RoundBtn(4));

        btn_register.setBorder(new RoundBtn(4));

        btn_forgotmypassword.setBorder(new RoundBtn(4));

        btn_resetmypassword.setBorder(new RoundBtn(4));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        pm_login = new javax.swing.JPopupMenu();
        mi_copy = new javax.swing.JMenuItem();
        mi_paste = new javax.swing.JMenuItem();
        cbmi_showpasswords = new javax.swing.JCheckBoxMenuItem();
        pnl_bottom = new javax.swing.JPanel();
        lb_header = new javax.swing.JLabel();
        pnl_middle = new javax.swing.JPanel();
        pnl_top = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pf_password = new javax.swing.JPasswordField();
        btn_forgotmypassword = new javax.swing.JButton();
        cb_showpassword = new javax.swing.JCheckBox();
        btn_login = new javax.swing.JButton();
        btn_register = new javax.swing.JButton();
        btn_resetmypassword = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        mi_cchooser = new javax.swing.JMenuItem();
        mi_fchooser = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mi_close = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        mi_copy.setText("Copy");
        mi_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_copyActionPerformed(evt);
            }
        });
        pm_login.add(mi_copy);

        mi_paste.setText("Paste");
        mi_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_pasteActionPerformed(evt);
            }
        });
        pm_login.add(mi_paste);

        cbmi_showpasswords.setText("Show Passwords");
        cbmi_showpasswords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbmi_showpasswordsActionPerformed(evt);
            }
        });
        pm_login.add(cbmi_showpasswords);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnl_bottom.setBackground(new java.awt.Color(255, 255, 255));

        lb_header.setBackground(new java.awt.Color(0, 0, 0));
        lb_header.setFont(new java.awt.Font("Linux Libertine G", 1, 36)); // NOI18N
        lb_header.setText("LOGIN SCREEN");

        pnl_middle.setBackground(new java.awt.Color(0, 0, 0));
        pnl_middle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        pnl_middle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnl_middleMouseClicked(evt);
            }
        });

        pnl_top.setBackground(new java.awt.Color(255, 255, 255));
        pnl_top.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Username");

        tf_username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_usernameMouseClicked(evt);
            }
        });
        tf_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_usernameActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Password");

        btn_forgotmypassword.setText("Forgot My Password");
        btn_forgotmypassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_forgotmypasswordActionPerformed(evt);
            }
        });

        cb_showpassword.setBackground(new java.awt.Color(255, 255, 255));
        cb_showpassword.setText("Show Password");
        cb_showpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_showpasswordActionPerformed(evt);
            }
        });

        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_register.setText("Register");
        btn_register.setMaximumSize(new java.awt.Dimension(58, 28));
        btn_register.setMinimumSize(new java.awt.Dimension(58, 28));
        btn_register.setPreferredSize(new java.awt.Dimension(58, 28));
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });

        btn_resetmypassword.setText("Reset My Password");
        btn_resetmypassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetmypasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_topLayout = new javax.swing.GroupLayout(pnl_top);
        pnl_top.setLayout(pnl_topLayout);
        pnl_topLayout.setHorizontalGroup(
            pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_topLayout.createSequentialGroup()
                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_topLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_topLayout.createSequentialGroup()
                                .addGap(184, 184, 184)
                                .addComponent(cb_showpassword))
                            .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_topLayout.createSequentialGroup()
                                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnl_topLayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_topLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pf_password, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_topLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_resetmypassword, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_forgotmypassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_topLayout.setVerticalGroup(
            pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_topLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pf_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addComponent(cb_showpassword)
                .addGap(34, 34, 34)
                .addComponent(btn_login)
                .addGap(18, 18, 18)
                .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(pnl_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_resetmypassword)
                    .addComponent(btn_forgotmypassword))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnl_middleLayout = new javax.swing.GroupLayout(pnl_middle);
        pnl_middle.setLayout(pnl_middleLayout);
        pnl_middleLayout.setHorizontalGroup(
            pnl_middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_middleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_middleLayout.setVerticalGroup(
            pnl_middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_middleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnl_bottomLayout = new javax.swing.GroupLayout(pnl_bottom);
        pnl_bottom.setLayout(pnl_bottomLayout);
        pnl_bottomLayout.setHorizontalGroup(
            pnl_bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_middle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_bottomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_header)
                .addGap(67, 67, 67))
        );
        pnl_bottomLayout.setVerticalGroup(
            pnl_bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bottomLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lb_header)
                .addGap(12, 12, 12)
                .addComponent(pnl_middle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenu1.add(jSeparator1);

        jMenu2.setText("Dialoges");

        mi_cchooser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mi_cchooser.setText("Color Chooser");
        mi_cchooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_cchooserActionPerformed(evt);
            }
        });
        jMenu2.add(mi_cchooser);

        mi_fchooser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mi_fchooser.setText("File Chooser");
        mi_fchooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_fchooserActionPerformed(evt);
            }
        });
        jMenu2.add(mi_fchooser);

        jMenu1.add(jMenu2);
        jMenu1.add(jSeparator2);

        mi_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mi_close.setText("Close");
        mi_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mi_closeActionPerformed(evt);
            }
        });
        jMenu1.add(mi_close);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //In this method, we are creating a new object from ForgotMyPassword class and setting it visible.
    private void btn_forgotmypasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_forgotmypasswordActionPerformed
        ForgotMyPassword forgotMyPassword = new ForgotMyPassword();
        forgotMyPassword.setVisible(true);
    }//GEN-LAST:event_btn_forgotmypasswordActionPerformed

    //In this method, if you click on the checkbox it sets visible password field.
    private void cb_showpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_showpasswordActionPerformed
        if (cb_showpassword.isSelected()) {
            pf_password.setEchoChar((char) 0);
        } else {
            pf_password.setEchoChar('*');
        }
    }//GEN-LAST:event_cb_showpasswordActionPerformed

    //In this method, we are creating a new object from Register class and setting it visible.
    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        Register register = new Register();
        register.setVisible(true);
    }//GEN-LAST:event_btn_registerActionPerformed

    //In this method, we are deciding to open the Schedule Frame or Lectures Frame.
    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed

        if (!Regex.validateLoginUsername(tf_username.getText())) { //Checking username from regex patterns.
            return;
        }

        if (!Regex.validateLoginPassword(pf_password.getText())) { //Checking password from regex patterns.
            return;
        }

        if (!(tf_username.getText().isEmpty()) && !(pf_password.getText().isEmpty())) { //Username field should not be empty.
            try {
                if (Db.selectStudent(tf_username.getText(), pf_password.getText())) { //Choosing student from database.
                    nameUser = tf_username.getText();
                    passUser = pf_password.getText();

                    if (!Db.hasLesson(nameUser, passUser)) { //If student doesn't have any lessons.
                        Lectures lecture = new Lectures(); //Lectures Frame is opening.
                        lecture.setVisible(true);
                    } else {
                        Schedule schedule = new Schedule(); //Schedule Frame is opening.

                        //We are getting datas that saved into Database before from Database.
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(0), schedule.listTableMonday, schedule.tMonday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(1), schedule.listTableTuesday, schedule.tTuesday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(2), schedule.listTableWednesday, schedule.tWednesday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(3), schedule.listTableThursday, schedule.tThursday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(4), schedule.listTableFriday, schedule.tFriday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(5), schedule.listTableSaturday, schedule.tSaturday);
                        Db.getDatasFromDB(Login.nameUser, Login.passUser, schedule.tp_days.getTitleAt(6), schedule.listTableSunday, schedule.tSunday);

                        schedule.setVisible(true);
                    }

                    tf_username.setText("");
                    pf_password.setText("");
                } else {
                    int result = JOptionPane.showConfirmDialog(this, "This user is not registered yet, do you want to register ?", "Warning !", JOptionPane.YES_NO_OPTION);

                    if (result == JOptionPane.YES_OPTION) { //If the user entered wrong information at Login Frame, Registeration opens.
                        Register register = new Register();
                        register.setVisible(true);

                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Username and password field cannot be empty", "Warning !", WIDTH);
        }
    }//GEN-LAST:event_btn_loginActionPerformed

    //Creating file chooser into menu item section.
    private void mi_fchooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_fchooserActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) { //Selecting anywhere to save.

            int selection = JOptionPane.showConfirmDialog(null, "Do you want to save and quit?", "Warning !", JOptionPane.YES_NO_OPTION);

            if (selection == JOptionPane.YES_OPTION) {
                File fileToSave = fileChooser.getSelectedFile(); //It saves datas into selected file.
                System.out.println("Save as file: " + fileToSave.getAbsolutePath()); //Getting path and printing.

                this.dispose();
            }
        }
    }//GEN-LAST:event_mi_fchooserActionPerformed

    //Creating color chooser into menu item section.
    private void mi_cchooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_cchooserActionPerformed
        Color initialcolor = Color.RED;
        Color color = JColorChooser.showDialog(this, "Select a color", initialcolor);
        pnl_top.setBackground(color);
    }//GEN-LAST:event_mi_cchooserActionPerformed

    //Asking user to save datas before leave.
    private void mi_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_closeActionPerformed
        int selection = JOptionPane.showConfirmDialog(jMenu1, "Do you want to quit without saving?", "Warning !", JOptionPane.YES_NO_OPTION);

        if (selection == JOptionPane.YES_OPTION) {
            this.dispose();
        } else {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Specify a file to save");

            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {

                int selectionSave = JOptionPane.showConfirmDialog(jMenu1, "Do you want to save and quit?", "Warning !", JOptionPane.YES_NO_OPTION);

                if (selectionSave == JOptionPane.YES_OPTION) {
                    File fileToSave = fileChooser.getSelectedFile();
                    System.out.println("Save as file: " + fileToSave.getAbsolutePath());

                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_mi_closeActionPerformed

    private void tf_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_usernameActionPerformed

    //In this method, we are creating a new object from ResetMyPassword class and setting it visible.
    private void btn_resetmypasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetmypasswordActionPerformed
        ResetMyPassword resetMyPassword = new ResetMyPassword();
        resetMyPassword.setVisible(true);
    }//GEN-LAST:event_btn_resetmypasswordActionPerformed

    private void pnl_middleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_middleMouseClicked

    }//GEN-LAST:event_pnl_middleMouseClicked

    //Copying username field into value variable.
    private void mi_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_copyActionPerformed
        value = tf_username.getSelectedText();
    }//GEN-LAST:event_mi_copyActionPerformed

    //Pasting value variable into username field.
    private void mi_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mi_pasteActionPerformed
        try {
            if (!value.isEmpty()) {
                tf_username.setText(tf_username.getText() + value);
            }
        } catch (java.lang.NullPointerException e) {
            System.out.println("Empty value");
        }
    }//GEN-LAST:event_mi_pasteActionPerformed

    //If user clicks right mouse button, Popup menu appears onto cursor.
    private void tf_usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_usernameMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            pm_login.show(this, evt.getX() + 230, evt.getY() + 250);
        }
    }//GEN-LAST:event_tf_usernameMouseClicked

    //If checkbox is selected, the password that user entered is shown on the screen.
    private void cbmi_showpasswordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbmi_showpasswordsActionPerformed
        if (cbmi_showpasswords.isSelected()) {
            pf_password.setEchoChar((char) 0);
        } else {
            pf_password.setEchoChar('*');
        }
    }//GEN-LAST:event_cbmi_showpasswordsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);

                Db.initConnection(); //Setting the connection between the database and login main frame.
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_forgotmypassword;
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_resetmypassword;
    private javax.swing.JCheckBox cb_showpassword;
    private javax.swing.JCheckBoxMenuItem cbmi_showpasswords;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel lb_header;
    private javax.swing.JMenuItem mi_cchooser;
    private javax.swing.JMenuItem mi_close;
    private javax.swing.JMenuItem mi_copy;
    private javax.swing.JMenuItem mi_fchooser;
    private javax.swing.JMenuItem mi_paste;
    protected static javax.swing.JPasswordField pf_password;
    private javax.swing.JPopupMenu pm_login;
    private javax.swing.JPanel pnl_bottom;
    private javax.swing.JPanel pnl_middle;
    private javax.swing.JPanel pnl_top;
    protected static javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables

}
